{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","clockName","props","nameTimerId","timeTimerId","this","setInterval","oldName","newName","value","now","toString","slice","getRandomName","setState","console","debug","info","toUTCString","clearInterval","className","Component","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAYO,IAAMA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,KACXC,UAAW,EAAKC,MAAMD,WAH1B,EAMEE,iBANF,IAQEC,iBARF,yDAUE,WAAqB,IAAD,OAClBC,KAAKF,YAAcG,aAAY,WAC7B,IAAMC,EAAU,EAAKT,MAAMG,UACrBO,EAnBZ,WACE,IAAMC,EAAQT,KAAKU,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAgBII,GAEhB,EAAKC,SAAS,CAAEb,UAAWO,IAG3BO,QAAQC,MAAR,uBAA8BT,EAA9B,eAA4CC,MAC3C,MAEHH,KAAKD,YAAcE,aAAY,WAC7B,IAAQP,EAAU,EAAKD,MAAfC,MAER,EAAKe,SAAS,CAAEf,MAAO,IAAIC,OAG3Be,QAAQE,KAAKlB,EAAMmB,cAAcN,OAAO,IAAK,MAC5C,OA5BP,kCA+BE,WACEO,cAAcd,KAAKD,aACnBe,cAAcd,KAAKF,eAjCvB,oBAoCE,WACE,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKP,MAAMG,YAGb,YAED,sBAAMmB,UAAU,cAAhB,SACGf,KAAKP,MAAMC,MAAMmB,cAAcN,OAAO,IAAK,YA9CtD,GAA2BS,aCNdC,EAAb,4MACExB,MAAQ,CACNG,UAAW,UACXsB,UAAU,GAHd,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKb,SAAS,CAAES,UAAU,IAE1BC,SAASC,iBAAiB,SAAS,WACjC,EAAKX,SAAS,CAAES,UAAU,EAAMtB,UAAW,oBAZnD,oBAiBE,WACE,MAAgCI,KAAKP,MAA7BG,EAAR,EAAQA,UAAWsB,EAAnB,EAAmBA,SAEnB,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOtB,UAAWA,WAvBvC,GAAyBoB,aCHzBO,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.9002b478.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string\n};\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class Clock extends Component<Props> {\n  state = {\n    today: new Date(),\n    clockName: this.props.clockName,\n  };\n\n  nameTimerId: any;\n\n  timeTimerId: any;\n\n  componentDidMount() {\n    this.nameTimerId = setInterval(() => {\n      const oldName = this.state.clockName;\n      const newName = getRandomName();\n\n      this.setState({ clockName: newName });\n\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }, 3300);\n\n    this.timeTimerId = setInterval(() => {\n      const { today } = this.state;\n\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeTimerId);\n    clearInterval(this.nameTimerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.state.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nexport class App extends Component {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n\n      document.addEventListener('click', () => {\n        this.setState({ hasClock: true, clockName: 'Clock-0' });\n      });\n    });\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} /> }\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}