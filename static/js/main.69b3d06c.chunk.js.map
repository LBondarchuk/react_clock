{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeTimerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","oldName","clockName","newName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","nameTimerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,YAAc,EALhB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAC3B,IAAQD,EAAU,EAAKD,MAAfC,MAGRO,QAAQC,KAAKR,EAAMS,cAAcC,OAAO,IAAK,MAC5C,OAdP,gCAiBE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,UACpBC,EAAUX,KAAKY,MAAMF,UAEvBD,IAAYE,GAEdP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA4CE,MAvBlD,kCA2BE,WACEG,cAAcd,KAAKD,eA5BvB,oBA+BE,WACE,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKY,MAAMF,YAGb,YAED,sBAAMK,UAAU,cAAhB,SACGf,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YAzCtD,GAA2BS,aCA3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAGX,IAAMG,EAAb,4MACEzB,MAAQ,CACNc,UAAW,UACXY,UAAU,GAHd,EAMEC,YAAc,EANhB,uDAQE,WAAqB,IAAD,OAClBvB,KAAKuB,YAActB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEO,UAAWO,QAC1B,MAEHO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEmB,UAAU,IAE1BE,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEmB,UAAU,YAlBlC,kCAuBE,WACER,cAAcd,KAAKuB,eAxBvB,oBA2BE,WACE,MAAgCvB,KAAKJ,MAA7Bc,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAjCvC,GAAyBM,aCTzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.69b3d06c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props> {\n  state = {\n    today: new Date(),\n  };\n\n  timeTimerId = 0;\n\n  componentDidMount() {\n    this.timeTimerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      const { today } = this.state;\n\n      // eslint-disable-next-line no-console\n      console.info(today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const oldName = prevProps.clockName;\n    const newName = this.props.clockName;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeTimerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  nameTimerId = 0;\n\n  componentDidMount() {\n    this.nameTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n\n      document.addEventListener('click', () => {\n        this.setState({ hasClock: true });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.nameTimerId);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}